import random
import os

import jsonpickle

class FileProvider:
    def get(self, path):
        file = open(path, "r")
        data = file.read()
        file.close()
        return data

    def append(self, path, data):
        file = open(path, "a")
        data = file.write(data)
        file.close()

    def writelines(self, path, data):
        file = open(path, "w")
        data = file.writelines(data)
        file.close()        

    def exists(self, path):
        return os.path.exists(path)


class QuestionsStorage:
    def get_all(self):
        questions = [Question('Сколько будет два плюс два умноженое на два?', 6),
                     Question('Бревно нужно распилить на десять частей, сколько нужно  распилов?', 9),
                     Question('На двух руках 10 пальцев, сколько пальцев на 5 руках?', 25),
                     Question('Укол делают каждые полчаса, сколько нужно минут для трёх уколов?', 60),
                     Question('Пять свечей горело, две потухли. Сколько свечей осталось?', 2)
                     ]
        return questions
    
    def fileWrite(self):

        json_data = jsonpickle.encode(questions)
        file_name = 'quest.json'
        file_provider = FileProvider()
        file_provider.writelines(file_name, json_data)    
        

class Question:
    def __init__(self, text, answer):
        self.text = text
        self.answer = answer

class User:
    def __init__(self, name, count_right_answers=0, result='Результат'):
        self.name = name
        self.count_right_answers = count_right_answers
        self.result = result
    def accept_right_answer(self):
        self.count_right_answers += 1
    def set_result(self, result):
        self.result = result

class UserResultStorage:
    def get_all(self):
        users = []
        return users

result = ['Идиот.', 'Кретин.', 'Дурак.', 'Нормальный.', 'Талант.', 'Гений.']


questionsStorage = QuestionsStorage()

questions = questionsStorage.get_all()

usersResultStorage = UserResultStorage()

coefficient = len(questions) / len(result)


def result_count_right_answers(count_right_answers_new):
    k = user.count_right_answers
    if k == 0:
        n = 0
    elif k > 0 and k <= coefficient:
        n = 1
    elif k > coefficient and k <= coefficient * 2:
        n = 2
    elif k > coefficient*2 and k <= coefficient * 3:
        n = 3
    elif k > coefficient * 3 and k <= coefficient * 4:
        n = 4
    else:
        n = 5
    count_right_answers_new = n

    return result[count_right_answers_new]

def question_namber(new_order_questions, questions, i):

    y = int(new_order_questions[i])    
    print(f'Вопрос номер: {i + 1}\n{questions[y].text}')

def new_order_question(questions):
    symbols = [str(x) for x in range(len(questions))]
    new_order_questions = ''
    for k in range(len(symbols)):
        random_index = random.randint(0, len(symbols) - 1)
        new_order_questions += symbols[random_index]
        symbols.pop(random_index)

    return new_order_questions

def show_user_results():
 
    file_name = 'data.json'
    file_provider = FileProvider()
    jonson_data = file_provider.get(file_name)
    userа = jsonpickle.decode(jonson_data)
    userr = userа
    
    
    name = 'Имя.'
    answers = 'Правильных ответов.'
    res = 'Результат.'
    print(f'{name:15}{answers:25}{res}')
    n = 0
    while n < len(userr):
        print(f'{userr[n]:15}{str(userr[n + 1]):25}{userr[n + 2]}')

        n += 3     


    return show_user_results


# ---------Проверка файла, если есть - вопросы из файла, если нет - вопросы из программы
# --------Если нет фаило, то добавляемые вопросы заносятса в QuestionsStorage
# -----------В конце программы создаётся файл и потом туда добавляютса все вопросы.
# ------------ При следующем запуске вопросы считываются уже с файла.-----------


file_name = 'quest.json'
file_provider = FileProvider()

if file_provider.exists(file_name):
    data = file_provider.get(file_name)
    questions=jsonpickle.decode(data)
    
        
    coefficient = len(questions) / len(result)
    



    
# --------------------------------------------------------------------
#--- Ввод вопроса---###

while True:
    user_question_new = input('Вы хотите ввести новый вопрос? Да/Нет\n')
    if user_question_new.upper() == 'ДА':
        answers_new = 0
        while answers_new == 0:
            answers_new_in = input('Введите вопрос: ')
            for i in range(0, len(answers_new_in)):
                if ord(answers_new_in[i]) < 1040 or ord(answers_new_in[i]) > 1103:
                        print('Вводите пожалуйста буквы русского алфавита.')
                        break

                else:
                    answers_new = answers_new_in



            
        while True:
            res_new_in = input('Введите ответ.Число: ')

            if res_new_in.isdigit():
                res_new = res_new_in
                break

            else:
                print('Введите пожалуйста число')
                continue         
           
            
        Quest_new = Question(answers_new, res_new)
        questions.append(Quest_new)
        continue
        
    else:
        break
#-------------------------------------#

#--- Вывод вопроса---###


while True:
    user_question_new = input('Вы хотите убрать  вопрос? Да/Нет\n')
    if user_question_new.upper() == 'ДА':

        for n in range(len(questions)):
            print('Вопрос номмер:', n + 1, questions[n].text)

        while True:
            
            question_delet_in = input('Какой вопрос вопрос вы бы хотели убрать? Номер:')
            if question_delet_in.isdigit():
                question_delet = int(question_delet_in) - 1
                del questions[question_delet]
                break

            else:
                print('Введите пожалуйста число')
                continue         

    else:
        break

                           
# --------------------------------------------------------------------------
            


user_name = str(input('Напишите пожалуйста как вас зовут. Ваше имя?\n:'))
user=User(user_name)

while True:

    new_order_questions = new_order_question(questions)
    
    for i in range(len(questions)):
        
        
        question_namber(new_order_questions, questions, i)
        while True:
            user_answer_input = input()

            if user_answer_input.isdigit():
                user_answer = int(user_answer_input)
                right_answer = questions[(int(new_order_questions[i]))].answer
                if user_answer == right_answer:
                    user.accept_right_answer()

                break

            else:
                print('Введите пожалуйста число')
                continue


        

    print(f'Количество правильных ответов = {user.count_right_answers}. Да вы {user_name} просто {result_count_right_answers(user.count_right_answers)}')

    user.set_result(result_count_right_answers(user.count_right_answers))

    userу = (user_name, user.count_right_answers, result_count_right_answers(user.count_right_answers))


    
    file_name = 'data.json'
    file_provider = FileProvider()
    if file_provider.exists(file_name):

        jonson_data = file_provider.get(file_name)
        user_w = jsonpickle.decode(jonson_data)
        user_w += userу

        json_data = jsonpickle.encode(user_w)
        file_provider.writelines(file_name, json_data)
    else:

        json_data = jsonpickle.encode(userу)
        file_provider.writelines(file_name, json_data)        

    user_answer = input('Если хотите посмотреть результаты предыдущих игр, напищите "Да" ')
    show_user_results()       

    user_confirm = input('Вы хотите пройти тест еще раз? Да/Нет\n')
    if user_confirm.upper() == 'ДА':
        count_right_answers=0
        continue
    else:
        break

questionsStorage.fileWrite()

print("Good bye")
